% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/departures.R
\name{departures}
\alias{departures}
\title{Determine the number of departures from a vector of stop ids on a specific date between two times}
\usage{
departures(
  gtfs = gtfs,
  stop_ids = stop_ids,
  date_as_ymd = date_as_ymd,
  start_as_hms = lubridate::hms("-1:0:0"),
  end_as_hms = lubridate::hms("48:00:00")
)
}
\arguments{
\item{gtfs}{A tidygtfs containing the timetable information.}

\item{stop_ids}{A vector of strings with the stop id numbers from the gtfs.}

\item{date_as_ymd}{A character string describing the date of interest in yms format.}

\item{start_as_hms}{A character string describing the start time of the period of interest, timezone local to the gtfs files.}

\item{end_as_hms}{A character string describing the end time of the period of interest, timezone local to the gtfs files.}
}
\value{
A number.
}
\description{
Determine the number of departures from a vector of stop ids on a specific date between two times
}
\examples{
# Read  test data------------------------------------
# We use a feed from the New York Metropolitan Transportation Authority. It is provided as a sample feed with tidytransit but you can read it directly from the MTAâ€™s website.
local_gtfs_path <- system.file("extdata", "google_transit_nyc_subway.zip", package = "tidytransit")
gtfs <- read_gtfs(local_gtfs_path)

# To create a departure timetable, we first need to find the ids of all stops in the stops table with the same same name, as stop_name might cover different platforms and thus have multiple stop_ids in the stops table.
stop_ids <- gtfs$stops \%>\%
 dplyr::filter(stop_name == "Times Sq - 42 St") \%>\%
 dplyr::select(stop_id)
# Note that multiple unrelated stops can have the same stop_name, see cluster_stops() for examples how to find these cases
departures(
 gtfs = gtfs,
 stop_ids = stop_ids,
 date_as_ymd = "2018-08-23",
 start_as_hms = lubridate::hms("7:00:00"),
 end_as_hms = lubridate::hms("7:10:00")
)
}
